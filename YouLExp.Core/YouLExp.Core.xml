<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YouLExp.Core</name>
    </assembly>
    <members>
        <member name="T:YouLExp.Core.DataTableExtend">
            <summary>
            <see cref="T:System.Data.DataTable"/>扩展类
            </summary>
        </member>
        <member name="T:YouLExp.Core.DateTimeExtend">
            <summary>
            <see cref="T:System.DateTime"/>扩展类
            </summary>
        </member>
        <member name="M:YouLExp.Core.DateTimeExtend.ToConvetDateTime(System.Object,System.String)">
            <summary>
            转换为<see cref="T:System.DateTime"/>类型
            </summary>
            <param name="dateTime">原格式</param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="T:YouLExp.Core.DictionaryExtend">
            <summary>
            字典扩展类
            </summary>
        </member>
        <member name="T:YouLExp.Core.StringExtend">
            <summary>
            字符串扩展类
            </summary>
        </member>
        <member name="M:YouLExp.Core.StringExtend.ToStringJoin(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            通过指定分隔符连接集合中每个成员。
            </summary>
            <param name="values">值</param>
            <param name="separator">分隔符</param>
            <returns>由分隔符字符串分隔的值的元素组成的字符串。如果值是空数组，则该方法返回<see cref="F:System.String.Empty"/> </returns>
        </member>
        <member name="M:YouLExp.Core.StringExtend.ToStringJoin(System.Collections.Generic.IEnumerable{System.Object},System.String)">
            <summary>
            通过指定分隔符连接集合中每个成员。
            </summary>
            <param name="values">值</param>
            <param name="separator">分隔符</param>
            <returns>由分隔符字符串分隔的值的元素组成的字符串。如果值是空数组，则该方法返回<see cref="F:System.String.Empty"/> </returns>
        </member>
        <member name="M:YouLExp.Core.StringExtend.ToStringJoin(System.Object[],System.String)">
            <summary>
            通过指定分隔符连接集合中每个成员。
            </summary>
            <param name="values">值</param>
            <param name="separator">分隔符</param>
            <returns>由分隔符字符串分隔的值的元素组成的字符串。如果值是空数组，则该方法返回<see cref="F:System.String.Empty"/> </returns>
        </member>
        <member name="M:YouLExp.Core.StringExtend.ToStringJoin``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            通过指定分隔符连接集合中每个成员。
            </summary>
            <param name="values">值</param>
            <param name="separator">分隔符</param>
            <returns>由分隔符字符串分隔的值的元素组成的字符串。如果值是空数组，则该方法返回<see cref="F:System.String.Empty"/> </returns>
        </member>
        <member name="T:YouLExp.Core.ValidExtend">
            <summary>
            验证扩展类
            </summary>
        </member>
        <member name="M:YouLExp.Core.ValidExtend.IsValidEmailAddress(System.String)">
            <summary>
            验证字符串格式是否为邮箱地址
            </summary>
            <param name="text">文本值</param>
            <returns></returns>
        </member>
        <member name="M:YouLExp.Core.ValidExtend.IsValidCarNo(System.String)">
            <summary>
            验证字符串格式是否为车牌号（包含新能源车牌）
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="T:YouLExp.Core.ValueExtend">
            <summary>
            数值扩展类
            </summary>
        </member>
        <member name="M:YouLExp.Core.ValueExtend.ToRound(System.Decimal,System.Int32,System.MidpointRounding)">
            <summary>
            将<see cref="T:System.Decimal"/>类型的值舍入到指定的小数位数。
            </summary>
            <param name="value">值</param>
            <param name="decimals">舍入的小数位数</param>
            <param name="midpoint">舍入方式</param>
            <returns></returns>
        </member>
        <member name="M:YouLExp.Core.ValueExtend.ToRound(System.Decimal,System.Int32)">
            <summary>
            将<see cref="T:System.Decimal"/>类型的值舍入到指定的小数位数。
            </summary>
            <param name="value">值</param>
            <param name="decimals">舍入的小数位数</param>
            <returns></returns>
        </member>
        <member name="M:YouLExp.Core.ValueExtend.ToRound(System.Double,System.Int32,System.MidpointRounding)">
            <summary>
            将<see cref="T:System.Double"/>类型的值舍入到指定的小数位数。
            </summary>
            <param name="value">值</param>
            <param name="decimals">舍入的小数位数</param>
            <param name="midpoint">舍入方式</param>
            <returns></returns>
        </member>
        <member name="M:YouLExp.Core.ValueExtend.ToRound(System.Double,System.Int32)">
            <summary>
            将<see cref="T:System.Double"/>类型的值舍入到指定的小数位数。
            </summary>
            <param name="value">值</param>
            <param name="decimals">舍入的小数位数</param>
            <returns></returns>
        </member>
        <member name="M:YouLExp.Core.ValueExtend.ToConvertInt32(System.Object,System.Int32)">
            <summary>
            转换为<see cref="T:System.Int32"/>类型
            </summary>
            <param name="value"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:YouLExp.Core.ValueExtend.ToConvertInt64(System.Object,System.Int64)">
            <summary>
            转换为<see cref="T:System.Int64"/>类型
            </summary>
            <param name="value"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
    </members>
</doc>
